---
alwaysApply: true
---
# Task List Management

Guidelines for managing task lists in markdown files to track progress on completing a PRD
The name of thesite is instantin.me
## Task Implementation
- **One sub-task at a time:** Do **NOT** start the next sub‑task until you ask the user for permission and they say "yes" or "y"
- **Completion protocol:**  
  1. When you finish a **sub‑task**, immediately mark it as completed by changing `[ ]` to `[x]`.
  2. **After each completed sub-task**, follow this sequence:
    - **Document**: Add entry to `PROGRESS.md` explaining what was accomplished and important notes
    - **Stage changes**: `git add .`
    - **Commit**: Use a descriptive commit message that:
      - Uses conventional commit format (`feat:`, `fix:`, `refactor:`, etc.)
      - Summarizes what was accomplished in the sub-task
      - References the specific task number
      - **Formats the message as a single-line command using `-m` flags**, e.g.:

        ```
        git commit -m "feat: add requirements.txt with dependencies" -m "Task 1.1: Added FastAPI, SQLAlchemy, Celery and all required packages" -m "Related to instantin.me PRD"
        ```
  3. When **all** subtasks underneath a parent task are `[x]`, mark the **parent task** as completed.
  4. **Optional**: Run relevant tests before moving to next parent task section.
- Stop after each sub‑task and wait for the user's go‑ahead.

## Task List Maintenance

1. **Update the task list as you work:**
   - Mark tasks and subtasks as completed (`[x]`) per the protocol above.
   - Add new tasks as they emerge.

2. **Maintain the "Relevant Files" section:**
   - List every file created or modified.
   - Give each file a one‑line description of its purpose.

## AI Instructions

When working with task lists, the AI must:

1. Regularly update the task list file after finishing any significant work.
2. Follow the completion protocol:
   - Mark each finished **sub‑task** `[x]`.
   - Mark the **parent task** `[x]` once **all** its subtasks are `[x]`.
3. Add newly discovered tasks.
4. Keep "Relevant Files" accurate and up to date.
5. Before starting work, check which sub‑task is next.
6. After implementing a sub‑task, update the file and then pause for user approval.
